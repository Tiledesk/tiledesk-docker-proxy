user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log;

events {
    worker_connections  1024;
}


http {

  client_max_body_size 200M;
  resolver 127.0.0.11 ipv6=off;
    
  map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
  }
  server {
        listen 80;
        location / {       
            return 301 $scheme://$host:8081/dashboard/;
        }
        location /dashboard/ {
            proxy_pass http://dashboard:80/;
        }
        location /cds/ {
            proxy_pass http://cds:80/;
        }
        location /chat/ {
            proxy_pass http://ionic:80/;
        }
        location /api/ {
            proxy_pass http://server:3000/;

            # Mantiene header utili per file e CORS
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        
            # Supporto a download parziali (Range)
            proxy_set_header Range $http_range;
            proxy_set_header If-Range $http_if_range;
            proxy_pass_request_headers on;
        
            # Evita chunking errato su file binari
            proxy_http_version 1.1;
            proxy_request_buffering off;
        
            # Permette file grandi fino a 200MB (gi√† impostato globalmente)
            client_max_body_size 200M;
        
            # Cache disabilitata per i file dinamici
            proxy_buffering off;
        }     
        location /ws/ {
            proxy_pass http://server:3000/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
        location /queues/ {
            proxy_pass http://queues:3004/;
        }
        location /config.json {
            proxy_pass http://server:3000/chat21/config;
        }    
        location /widget/ {
            if ($request_method = OPTIONS) {
                return 204;
            }

            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Max-Age 3600;
            add_header Access-Control-Expose-Headers Content-Length;
            add_header Access-Control-Allow-Headers Range;
            
            proxy_pass http://webwidget:80/;
        }     
        location /widget-config.json {
            proxy_pass http://webwidget:80/widget-config.json;
        }
        location /firebase-messaging-sw.js {
            proxy_pass http://ionic:80/firebase-messaging-sw.js;
        }
        location /chatapi/ {
            proxy_pass http://chat21httpserver:8004/;
        }   
        location /mqws/ {
            proxy_pass http://rabbitmq:15675/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }   
       
       
      
  }
}
